# config data bases
spring:
  # config Rabbitmq
  cloud:
    stream:      
      binders:
        rabbit1:
          type: rabbit
          environment:
            spring:
              rabbitmq:
#config ip rabbitmq
                host: 127.0.0.1
                port: 5672
                username: admin
                password: admin
  #profiles: test
  #main:
    #web-environment: false
  #add disable this option jmx
  #jmx:
    #enabled: false
# Datasource and JPA configuration to be used for using the same tokenstore as the authorization server for
# the defined resource server. Note that there can't be 2 different root nodes, so datasource falls under the "spring" node.
  datasource:
    url: jdbc:mysql://localhost:3306/clientdb
    username: root
    password: mysql
    driver-class: com.mysql.jdbc.Driver
    initialize: true
    separator: ^
    continueOnError: false
    schema: classpath:/sql/1.InitTable.sql
    data: classpath:/sql/2.insertData.sql
#
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: true
    hibernate:
      #ddl-auto: create
      show_sql: true
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
# config freemarker
  #freemarker:
    #template-loader-path: /templates/
    #suffix: .ftl

  #messages:
      #basename: i18n/messages
  #messages:
    #basename: i18n/messages
    #cache-seconds: -1
    #encoding: UTF-8

  #velocity:
    #resourceLoaderPath: classpath:/templates/velocity

# Mailing
mail:
  protocol: smtp
  smtp:
    host: smtp.gmail.com
    port: 587
  support:
    username: lperez.transoft@gmail.com
    password: Transoft1!
# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level:  
  # config application
    com.ston.vipay.pay: DEBUG
  # Logger-specific levels.
  loggers:

    # Redirects SQL logs to a separate file
    org.hibernate.SQL: DEBUG
    org.springframework.web: DEBUG

# modified enable option
server:
  port: 8081
# config Oauth
serviceOauth:
  login: http://oauth-service/uaa/oauth/token?client_id=
  refresh: http://oauth-service/uaa/oauth/token?grant_type=refresh_token&refresh_token=
  logout: http://oauth-service/uaa/api/logout-up
  account: http://localhost:9999/uaa/api/account
#
#tomcat:
  #version: 8.0.32

eureka:
  client:
    serviceUrl:
      #defaultZone: http://actuator:password@localhost:8761/eureka/
      defaultZone: http://localhost:8761/eureka/
  instance:
    metadataMap:
      instanceId: ${spring.application.name}:${server.port}

security:
  oauth2:
    client:
      accessTokenUri: http://localhost:9999/uaa/oauth/token
    resource:
      userInfoUri: http://localhost:9999/uaa/api/user

debug: true
